package tw.group5.controller;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.EnableTransactionManagement;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;

import tw.joshsun.model.Account;
import tw.joshsun.model.AccountDao;

@Controller
@EnableTransactionManagement //允許dao做交易(為什麼是允許dao?)
@SessionAttributes(names = {"user","pwd"}) //加這行就變session等級的attribute，如果上面@EnableTransactionManagement註解掉就不能執行^^
public class LoginController {
	@Autowired //自己去找AccountDao
	private AccountDao accountDao;
	
	@RequestMapping(path = "/loginmain.controller", method = RequestMethod.GET)
	public String processLoginMainPage() {
		return "login"; //return去/WEB-INF/pages/login.jsp
	}
	
	@RequestMapping(path = "/checklogin.controller", method = RequestMethod.POST) //帳號密碼用post!
	public String processCheckLogin(@RequestParam(name = "userName") String user, @RequestParam(name = "userPwd") String pwd, Model m) { //因為要回傳，所以用Model
		Map<String, String> errors = new HashMap<String, String>();
		m.addAttribute("errors", errors);
		
		if(user==null || user.length()==0) {
			errors.put("username", "username is required");
		}
		
		if(pwd==null || pwd.length()==0) {
			errors.put("userpwd", "password is required");
		}
		
		if(errors!=null && !errors.isEmpty()) {
			return "login"; //有錯誤訊息，回登入頁面
		}
		
		boolean checkUserStatus = accountDao.checkLogin(new Account(user, pwd)); //有打帳密的話，去dao(產生Account的匿名物件去checkLogin)
		
		if(checkUserStatus) {
			m.addAttribute("user", user); //request等級的attribute
			m.addAttribute("pwd", pwd);
			return "loginSuccess";
		}
		//帳密false的話:
		errors.put("msg", "please input correct username or password");
		return "login";		
	}
	
}
